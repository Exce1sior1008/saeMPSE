// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// mspe_FH_McJack
arma::vec mspe_FH_McJack(int m, arma::mat X, arma::vec Y, arma::vec D, arma::vec bhat, double Ahat, const int K, int maxiter);
RcppExport SEXP _smaFHNER_mspe_FH_McJack(SEXP mSEXP, SEXP XSEXP, SEXP YSEXP, SEXP DSEXP, SEXP bhatSEXP, SEXP AhatSEXP, SEXP KSEXP, SEXP maxiterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type D(DSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type bhat(bhatSEXP);
    Rcpp::traits::input_parameter< double >::type Ahat(AhatSEXP);
    Rcpp::traits::input_parameter< const int >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    rcpp_result_gen = Rcpp::wrap(mspe_FH_McJack(m, X, Y, D, bhat, Ahat, K, maxiter));
    return rcpp_result_gen;
END_RCPP
}
// mspe_FH_Jackknife
arma::vec mspe_FH_Jackknife(int p, int m, arma::mat X, arma::mat Y, arma::vec D, arma::vec bhat, double A_REML, int maxiter);
RcppExport SEXP _smaFHNER_mspe_FH_Jackknife(SEXP pSEXP, SEXP mSEXP, SEXP XSEXP, SEXP YSEXP, SEXP DSEXP, SEXP bhatSEXP, SEXP A_REMLSEXP, SEXP maxiterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type D(DSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type bhat(bhatSEXP);
    Rcpp::traits::input_parameter< double >::type A_REML(A_REMLSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    rcpp_result_gen = Rcpp::wrap(mspe_FH_Jackknife(p, m, X, Y, D, bhat, A_REML, maxiter));
    return rcpp_result_gen;
END_RCPP
}
// mspe_FH_PB
arma::vec mspe_FH_PB(arma::mat X, arma::vec Y, arma::vec D, int K);
RcppExport SEXP _smaFHNER_mspe_FH_PB(SEXP XSEXP, SEXP YSEXP, SEXP DSEXP, SEXP KSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type D(DSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    rcpp_result_gen = Rcpp::wrap(mspe_FH_PB(X, Y, D, K));
    return rcpp_result_gen;
END_RCPP
}
// mspe_FH_DB
arma::vec mspe_FH_DB(arma::mat X, arma::vec y, arma::vec D, int K, int C, arma::vec b, double Ahat, int maxiter);
RcppExport SEXP _smaFHNER_mspe_FH_DB(SEXP XSEXP, SEXP ySEXP, SEXP DSEXP, SEXP KSEXP, SEXP CSEXP, SEXP bSEXP, SEXP AhatSEXP, SEXP maxiterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type D(DSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type C(CSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b(bSEXP);
    Rcpp::traits::input_parameter< double >::type Ahat(AhatSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    rcpp_result_gen = Rcpp::wrap(mspe_FH_DB(X, y, D, K, C, b, Ahat, maxiter));
    return rcpp_result_gen;
END_RCPP
}
// mspe_FH_Sucma
arma::vec mspe_FH_Sucma(int p, int m, arma::mat X, arma::vec Y, arma::vec D, arma::vec bhat, double A_REML, int K);
RcppExport SEXP _smaFHNER_mspe_FH_Sucma(SEXP pSEXP, SEXP mSEXP, SEXP XSEXP, SEXP YSEXP, SEXP DSEXP, SEXP bhatSEXP, SEXP A_REMLSEXP, SEXP KSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type m(mSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type D(DSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type bhat(bhatSEXP);
    Rcpp::traits::input_parameter< double >::type A_REML(A_REMLSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    rcpp_result_gen = Rcpp::wrap(mspe_FH_Sucma(p, m, X, Y, D, bhat, A_REML, K));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_smaFHNER_mspe_FH_McJack", (DL_FUNC) &_smaFHNER_mspe_FH_McJack, 8},
    {"_smaFHNER_mspe_FH_Jackknife", (DL_FUNC) &_smaFHNER_mspe_FH_Jackknife, 8},
    {"_smaFHNER_mspe_FH_PB", (DL_FUNC) &_smaFHNER_mspe_FH_PB, 4},
    {"_smaFHNER_mspe_FH_DB", (DL_FUNC) &_smaFHNER_mspe_FH_DB, 8},
    {"_smaFHNER_mspe_FH_Sucma", (DL_FUNC) &_smaFHNER_mspe_FH_Sucma, 8},
    {NULL, NULL, 0}
};

RcppExport void R_init_smaFHNER(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
